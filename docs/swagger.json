{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "SE Shop REST API",
    "description": "RESTful API for SE Shop",
    "contact": {
      
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development Server"
    },
    {
      "url": "https://possibleserver.onrender.com",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "Cart",
      "description": "รถเข็น"
    },
    {
      "name": "Category",
      "description": "หมวดหมู่สินค้า"
    },
    {
      "name": "Product",
      "description": "สินค้า"
    },
    {
      "name": "Order",
      "description": "คำสั่งซื้อ"
    },
    {
      "name": "User",
      "description": "ผู้ใช้งาน"
    },
    {
      "name": "Supplier",
      "description": "ผู้จัดจำหน่าย"
    },
    {
      "name": "Status",
      "description": "สถานะ"
    },
    {
      "name": "Promotion",
      "description": "โปรโมชั่น"
    },
    {
      "name": "PurchaseOrder",
      "description": "คำสั่งซื้อ"
    }
  ],
  "paths": {
    "/api/v1/cart": {
      "post": {
        "tags": ["Cart"],
        "summary": "Create a new cart",
        "description": "Create a new shopping cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart created successfully"
          }
        }
      },
      "get": {
        "tags": ["Cart"],
        "summary": "Get all carts",
        "description": "Retrieve all shopping carts",
        "responses": {
          "200": {
            "description": "List of carts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cart/add-with-barcode": {
      "post": {
        "tags": ["Cart"],
        "summary": "Create cart with barcode",
        "description": "Create a new shopping cart using product barcode",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "barcode": {
                    "type": "string"
                  },
                  "userName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart created successfully"
          }
        }
      }
    },
    "/api/v1/cart/{userName}": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get carts by username",
        "description": "Retrieve all carts for a specific user",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's carts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cart/{id}": {
      "put": {
        "tags": ["Cart"],
        "summary": "Update cart",
        "description": "Update an existing cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Cart ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete cart",
        "description": "Delete an existing cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Cart ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart deleted successfully"
          }
        }
      }
    },
    "/api/v1/cart/deleteAllCarts/{userName}": {
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete all carts",
        "description": "Delete all carts for a specific user",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All carts deleted successfully"
          }
        }
      }
    },
    "/api/v1/product": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a new product",
        "description": "Create a new product with image",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "productImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "categoryId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          }
        }
      },
      "get": {
        "tags": ["Product"],
        "summary": "Get all products",
        "description": "Retrieve all products",
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by ID",
        "description": "Retrieve a specific product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update product",
        "description": "Update an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "productImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "categoryId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete product",
        "description": "Delete an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          }
        }
      }
    },
    "/api/v1/product/barcode/{barcode}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by barcode",
        "description": "Retrieve a specific product by barcode",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "description": "Product barcode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register new user",
        "description": "Register a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "description": "Login with user credentials",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "description": "Logout current user",
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/api/v1/auth/updateProfile": {
      "put": {
        "tags": ["User"],
        "summary": "Update user profile",
        "description": "Update current user's profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "shopName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          }
        }
      }
    },
    "/api/v1/category": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "description": "Create a new product category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "Get all categories",
        "description": "Retrieve all product categories",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/category/{id}": {
      "get": {
        "tags": ["Category"],
        "summary": "Get category by ID",
        "description": "Retrieve a specific category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Category"],
        "summary": "Update category",
        "description": "Update an existing category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "Delete category",
        "description": "Delete an existing category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          }
        }
      }
    },
    "/api/v1/supplier/createSupplier": {
      "post": {
        "tags": ["Supplier"],
        "summary": "Create a new supplier",
        "description": "Create a new supplier",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Supplier created successfully"
          }
        }
      }
    },
    "/api/v1/supplier/updateSupplierInfo/{id}": {
      "put": {
        "tags": ["Supplier"],
        "summary": "Update supplier",
        "description": "Update an existing supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Supplier updated successfully"
          }
        }
      }
    },
    "/api/v1/supplier/deleteSupplier/{id}": {
      "delete": {
        "tags": ["Supplier"],
        "summary": "Delete supplier",
        "description": "Delete an existing supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier deleted successfully"
          }
        }
      }
    },
    "/api/v1/supplier/getAllSupplier": {
      "get": {
        "tags": ["Supplier"],
        "summary": "Get all suppliers",
        "description": "Retrieve all suppliers",
        "responses": {
          "200": {
            "description": "List of suppliers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplier/getSupplierById/{id}": {
      "get": {
        "tags": ["Supplier"],
        "summary": "Get supplier by ID",
        "description": "Retrieve a specific supplier by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/promotion": {
      "post": {
        "tags": ["Promotion"],
        "summary": "Create a new promotion",
        "description": "Create a new promotion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promotion created successfully"
          }
        }
      },
      "get": {
        "tags": ["Promotion"],
        "summary": "Get all promotions",
        "description": "Retrieve all promotions",
        "responses": {
          "200": {
            "description": "List of promotions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/promotion/{id}": {
      "get": {
        "tags": ["Promotion"],
        "summary": "Get promotion by ID",
        "description": "Retrieve a specific promotion by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Promotion"],
        "summary": "Update promotion",
        "description": "Update an existing promotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promotion updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Promotion"],
        "summary": "Delete promotion",
        "description": "Delete an existing promotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion deleted successfully"
          }
        }
      }
    },
    "/api/v1/purchase-orders": {
      "post": {
        "tags": ["PurchaseOrder"],
        "summary": "Create a new purchase order",
        "description": "Create a new purchase order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase order created successfully"
          }
        }
      },
      "get": {
        "tags": ["PurchaseOrder"],
        "summary": "Get all purchase orders",
        "description": "Retrieve all purchase orders",
        "responses": {
          "200": {
            "description": "List of purchase orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase-orders/{id}": {
      "get": {
        "tags": ["PurchaseOrder"],
        "summary": "Get purchase order by ID",
        "description": "Retrieve a specific purchase order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Purchase Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["PurchaseOrder"],
        "summary": "Update purchase order",
        "description": "Update an existing purchase order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Purchase Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase order updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["PurchaseOrder"],
        "summary": "Delete purchase order",
        "description": "Delete an existing purchase order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Purchase Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase order deleted successfully"
          }
        }
      }
    },
    "/api/v1/purchase-orders/{id}/receive": {
      "post": {
        "tags": ["PurchaseOrder"],
        "summary": "Receive stock",
        "description": "Receive stock for a purchase order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Purchase Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock received successfully"
          }
        }
      }
    },
    "/api/v1/status": {
      "post": {
        "tags": ["Status"],
        "summary": "Create a new status",
        "description": "Create a new status",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Status created successfully"
          }
        }
      },
      "get": {
        "tags": ["Status"],
        "summary": "Get all statuses",
        "description": "Retrieve all statuses",
        "responses": {
          "200": {
            "description": "List of statuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/{id}": {
      "get": {
        "tags": ["Status"],
        "summary": "Get status by ID",
        "description": "Retrieve a specific status by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Status ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Status"],
        "summary": "Update status",
        "description": "Update an existing status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Status ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Status"],
        "summary": "Delete status",
        "description": "Delete an existing status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Status ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status deleted successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "categoryId": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "shopName": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discount": {
            "type": "number"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
} 